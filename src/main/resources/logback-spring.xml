<?xml version="1.0" encoding="UTF-8" ?>
<!-- scan: 当此属性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true。 -->
<!-- scanPeriod: 设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒。当scan为true时，此属性生效。默认的时间间隔为1分钟。 -->
<!-- debug: 当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false。 -->
<configuration scan="true" scanPeriod="5 seconds" debug="false">
    <!-- 设置上下文名称 -->
	<contextName>toutiao</contextName>
    <!-- 定义控制台输出 -->
    <!--<appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">-->
        <!--<encoder>-->
            <!--<charset>utf-8</charset>-->
            <!--<Pattern>[%p] %c - %m%n</Pattern>-->
        <!--</encoder>-->
    <!--</appender>-->

	<appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
		<encoder>
			<pattern>
				%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{32} - %msg%n
			</pattern>
		</encoder>
	</appender>

   <!-- 日志输出到文件 http://blog.csdn.net/haidage/article/details/6794529 -->
    <!--<appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">-->
        <!--<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">-->
            <!--<fileNamePattern>logFile.%d{yyyy-MM-dd}.log</fileNamePattern>-->
            <!--<maxHistory>90</maxHistory>-->
        <!--</rollingPolicy>-->
        <!--<encoder>-->
            <!--<charset>utf-8</charset>-->
            <!--<Pattern>%d %-5level [%thread] %logger{0}: %msg%n</Pattern>-->
        <!--</encoder>-->
    <!--</appender>-->
    <!--<appender name="ASYNC" class="ch.qos.logback.classic.AsyncAppender">-->
        <!--<queueSize>512</queueSize>-->
        <!--<appender-ref ref="FILE"/>-->
    <!--</appender>-->

    <!-- <root>：也是<logger>元素，但是它是根logger。只有一个level属性，应为已经被命名为"root". -->
    <!-- level: 用来设置打印级别，大小写无关：TRACE, DEBUG, INFO, WARN, ERROR, ALL 和 OFF，不能设置为INHERITED或者同义词NULL。 默认是DEBUG。 -->
    <!-- <logger>和<root>可以包含零个或多个<appender-ref>元素，标识这个appender将会添加到这个logger。 -->

	<root level="ERROR">
		<appender-ref ref="STDOUT" />
	</root>

    <!-- <logger>：用来设置某一个包或者具体的某一个类的日志打印级别、以及指定<appender>。<loger>仅有一个name属性，一个可选的level和一个可选的addtivity属性。 -->
    <!-- name: 用来指定受此loger约束的某一个包或者具体的某一个类。 -->
    <!-- level: 用来设置打印级别，大小写无关：TRACE, DEBUG, INFO,WARN,ERROR,ALL和OFF，还有一个特俗值INHERITED或者同义词NULL`，代表强制执行上级的级别。 如果未设置此属性，那么当前loger将会继承上级的级别。 -->
    <!-- addtivity: 是否向上级loger传递打印信息。默认是true。 -->

	<logger name="com.fzu.service.UserRepositoryTest" level="ERROR" />

</configuration>
