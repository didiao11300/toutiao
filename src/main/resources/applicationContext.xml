<?xml version="1.0" encoding="utf-8" ?>
<!-- 引用 Spring 的多个Schema 空间的格式定义文件 -->
<!-- 引入aop及tx命名空间所对应的 Schema 文件-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-3.1.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
       ">

   <!-- 扫描类包，将标注 Spring 注解的类自动转化为Bean ,同时完成 Bean 的注入-->
   <context:component-scan base-package="com.toutiao.dao" />
    <!-- 扫描 Service 类包，应用 Spring 注解-->
    <context:component-scan base-package="com.toutiao.service" />

    <!--&lt;!&ndash; 引入 JDBC 连接的属性文件 &ndash;&gt;-->
    <!--<context:property-placeholder location="classpath:jdbc.properties" />-->

    <!--&lt;!&ndash; 定义一个 DBCP 实现的数据源&ndash;&gt;-->
   <!--<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"-->
        <!--destroy-method="close"-->
         <!--p:driverClassName="{jdbc.driverClassName}"-->
         <!--p:url="{jdbc.url}"-->
         <!--p:username="{jdbc.username}"-->
         <!--p:password="{jdbc.pasaword}"-->
   <!--/>-->
    <!-- 定义一个 DBCP 实现的数据源-->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
          destroy-method="close"
          p:driverClassName="com.mysql.jdbc.Driver"
          p:url="jdbc:mysql://127.0.0.1:3306/toutiao"
          p:username="root"
          p:password="root"
    />
    <!-- 定义JDBC的模板-->
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate"
          p:dataSource-ref="dataSource"
    />

    <!-- 配置事务管理器-->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
          p:dataSource-ref="dataSource"
    />

    <!-- 通过 AOP 配置提供事务增强，让 service 包下的所有Bean的所有方法拥有事务-->
    <aop:config proxy-target-class="true">
        <aop:pointcut id="serviceMethod"
                      expression=" execution(* com.toutiao.service..*(..))"/>
        <aop:advisor pointcut-ref="serviceMethod" advice-ref="txAdvice" />
    </aop:config>
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="*" />
        </tx:attributes>
    </tx:advice>
</beans>
